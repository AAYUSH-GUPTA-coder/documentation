---
import MoreMenu from "./MoreMenu.astro"
import { Feedback } from "../PageContent/Feedback"
import { MarkdownHeading } from "astro"
import TableOfContents from "~/components/TableOfContents/TableOfContents"

export type Props = {
  githubEditUrl: string
  headings: MarkdownHeading[]
}
const { githubEditUrl, headings } = Astro.props
---

<div id="sidebar-container" style="visibility: hidden">
  <div id="sidebar-toggle"><a>{"<"}</a></div>
  <aside id="sidebar-nav" aria-hidden="true">
    <h2 class="heading">On this page</h2>
    <div class="toc-wrapper">
      <TableOfContents client:media="(min-width: 50em)" initialHeadings={headings} />
    </div>
    <MoreMenu editHref={githubEditUrl} />
    <h2 class="heading feedback-title">Feedback</h2>
    <div class="feedback-wrapper">
      <Feedback client:idle />
    </div>
  </aside>
</div>

<style>
  #sidebar-container {
    display: flex;
    width: fit-content;
    max-width: 70vw;
    max-width: 70dvw;
    height: 80vh;
    height: 80dvh;
    /* min-height: fit-content; */
    position: fixed;
    bottom: var(--space-16x);
    right: 0;
    z-index: 5;
    border-radius: var(--space-4x);
    box-shadow: 0 0 var(--space-4x) 0 rgba(0, 0, 0, 0.15);
    background: rgba(255, 255, 255, 0.92);
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0.15) 0%,
      rgba(255, 255, 255, 0.8) 15%,
      rgba(255, 255, 255, 0.93) 20%
    );
    backdrop-filter: blur(1px);
    -webkit-backdrop-filter: blur(1px);
    transition: transform 400ms ease-in-out;
  }

  #sidebar-toggle {
    height: 100%;
    /* width: 100%; */
    transition: color 150ms, width 300ms ease-in-out;
  }

  #sidebar-toggle > a {
    display: flex;
    height: 100%;
    padding-left: var(--space-6x);
    padding-right: var(--space-6x);
    font-size: 28px;
    cursor: pointer;
  }

  #sidebar-nav {
    /* height: fit-content; */
    padding: var(--doc-padding) var(--doc-padding) calc(2 * var(--doc-padding)) var(--doc-padding);
  }

  .heading {
    color: var(--color-text-heading);
    font-size: 12px;
    letter-spacing: 1px;
    font-weight: 500;
    text-transform: uppercase;
    margin-bottom: 0;
  }

  .feedback-title {
    margin-top: var(--space-8x);
  }

  .feedback-wrapper {
    margin-top: var(--space-3x);
  }

  .toc-wrapper {
    padding: 0;
    margin-bottom: var(--space-8x);
  }

  @media (max-width: 50em) {
    #sidebar-container,
    #sidebar-nav {
      display: none;
    }
  }
</style>

<script>
  const c = document.getElementById("sidebar-container")
  const t = document.getElementById("sidebar-toggle")
  const nav = document.getElementById("sidebar-nav")

  if (c && t && nav) {
    c.style.transform = `translateX(${nav.clientWidth}px)`
    c.style.visibility = "visible"
    const transforms = {
      hide: `translateX(${nav.clientWidth}px)`,
      show: "translateX(calc(-1 * var(--space-16x)))",
      peek: `translateX(calc(${nav.clientWidth}px - var(--space-6x)))`,
    }

    t.onclick = (e) => {
      if (nav.ariaHidden === "true") {
        c.style.transform = transforms.show
        nav.ariaHidden = "false"
      } else {
        c.style.transform = transforms.hide
        nav.ariaHidden = "true"
      }
    }

    t.onmouseover = (e) => {
      if (nav.ariaHidden === "true") {
        c.style.transform = transforms.peek
      }
    }

    t.onmouseleave = (e) => {
      if (nav.ariaHidden === "true") {
        c.style.transform = transforms.hide
      }
    }
  }
</script>
